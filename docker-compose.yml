version: '3.3'
services:
    sslh:
        build: ./sslh
        ports:
            - "443:443"
        container_name: sslh
        environment:
            - HOST_LISTEN=0.0.0.0
            - PORT_LISTEN=443
            - SSH_HOST_FORWARD=dockerhost
            - SSH_PORT_FORWARD=${DCP_ENV_HOST_SSHD_PORT}
            - SSL_HOST_FORWARD=dockerhost
            - SSL_PORT_FORWARD=${DCP_ENV_NGINX_HTTPS_PORT}
        extra_hosts:
            - "dockerhost:${DCP_ENV_HOST_IP_ADDR}"
        env_file: prod.env

    nginx-proxy:
        image: nginx:alpine
        container_name: nginx-proxy
        ports:
            - "80:80"
            - "${DCP_ENV_NGINX_HTTPS_PORT}:443"
        volumes:
            - ${DCP_ENV_NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
            - ${DCP_ENV_NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
            - ${DCP_ENV_NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
            - ${DCP_ENV_NGINX_FILES_PATH}/html:/usr/share/nginx/html
            - ${DCP_ENV_NGINX_FILES_PATH}/dhparam/dhparam.pem:/etc/nginx/dhparam/dhparam.pem
            - ./nginx-proxy/redirect.conf:/etc/nginx/conf.d/redirect.conf:ro
        env_file: prod.env
        labels:
            - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

    nginx-proxy-gen:
        image: jwilder/docker-gen
        command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
        container_name: nginx-proxy-gen
        volumes:
            - ${DCP_ENV_NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
            - ${DCP_ENV_NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
            - ${DCP_ENV_NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
            - ${DCP_ENV_NGINX_FILES_PATH}/html:/usr/share/nginx/html
            - ./nginx-proxy/bin/nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        depends_on:
            - nginx-proxy
        labels:
            - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"

    mail:
        image: tvial/docker-mailserver:latest
        ports:
            # SMTP
            - "25:25"
            # SMTP (MSA)
            - "587:587"
        container_name: mail
        hostname: mail
        domainname: ${DCP_ENV_DOMAIN}
        volumes:
            - maildata:/var/mail
            - mailstate:/var/mail-state
            - ./mailserver/config:/tmp/docker-mailserver/
        environment:
            - ENABLE_SPAMASSASSIN=1
            - ENABLE_FAIL2BAN=1
        cap_add:
            - NET_ADMIN

    gogs:
        image: gogs/gogs
        container_name: gogs
        ports:
            - "10023:22"
        volumes:
            - gogs-volume:/data
            - ${DCP_ENV_GOGS_CONFIG_PATH}:/data/gogs/conf/app.ini
        environment:
            - VIRTUAL_HOST=git.${DCP_ENV_DOMAIN}
            - VIRTUAL_PORT=3000
            - HTTPS_METHOD=${DCP_ENV_HTTPS_METHOD}
            - LETSENCRYPT_HOST=git.${DCP_ENV_DOMAIN}
            - LETSENCRYPT_EMAIL=${DCP_ENV_LETSENCRYPT_EMAIL}
            - LETSENCRYPT_TEST=${DCP_ENV_LETSENCRYPT_TEST}
        env_file: prod.env

    keeweb:
        image: antelle/keeweb
        container_name: keeweb
        volumes:
            - ${DCP_ENV_KEEWEB_CONFIG_PATH}:/keeweb/config.json:ro
        environment:
            - VIRTUAL_HOST=keeweb.${DCP_ENV_DOMAIN}
            - VIRTUAL_PORT=443
            - VIRTUAL_PROTO=https
            - HTTPS_METHOD=${DCP_ENV_HTTPS_METHOD}
            - LETSENCRYPT_HOST=keeweb.${DCP_ENV_DOMAIN}
            - LETSENCRYPT_EMAIL=${DCP_ENV_LETSENCRYPT_EMAIL}
            - LETSENCRYPT_TEST=${DCP_ENV_LETSENCRYPT_TEST}
        env_file: prod.env

    keeweb-webdav:
        build: ./keeweb-webdav
        container_name: keeweb-webdav
        volumes:
            - ./keeweb-webdav/httpd-dav.conf:/usr/local/apache2/conf/extra/httpd-dav.conf:ro
            - ./keeweb-webdav/user.passwd:/var/local/apache2/user.passwd:ro
            - keeweb-webdav-volume:/var/www/${DCP_ENV_KEEWEB_DB_NAME}:rw
        environment:
            - VIRTUAL_HOST=webdav.keeweb.${DCP_ENV_DOMAIN}
            - HTTPS_METHOD=${DCP_ENV_HTTPS_METHOD}
            - LETSENCRYPT_HOST=webdav.keeweb.${DCP_ENV_DOMAIN}
            - LETSENCRYPT_EMAIL=${DCP_ENV_LETSENCRYPT_EMAIL}
            - LETSENCRYPT_TEST=${DCP_ENV_LETSENCRYPT_TEST}
        env_file: prod.env

    netdata:
        image: firehol/netdata
        container_name: netdata
        ports:
            - "19999:19999"
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
        cap_add:
            - SYS_PTRACE
        environment:
            - VIRTUAL_HOST=netdata.${DCP_ENV_DOMAIN}
            - HTTPS_METHOD=${DCP_ENV_HTTPS_METHOD}
            - LETSENCRYPT_HOST=netdata.${DCP_ENV_DOMAIN}
            - LETSENCRYPT_EMAIL=${DCP_ENV_LETSENCRYPT_EMAIL}
            - LETSENCRYPT_TEST=${DCP_ENV_LETSENCRYPT_TEST}
        env_file: prod.env

    piwik:
        image: piwik
        container_name: piwik
        environment:
            - VIRTUAL_HOST=piwik.${DCP_ENV_DOMAIN}
            - HTTPS_METHOD=${DCP_ENV_HTTPS_METHOD}
            - LETSENCRYPT_HOST=piwik.${DCP_ENV_DOMAIN}
            - LETSENCRYPT_EMAIL=${DCP_ENV_LETSENCRYPT_EMAIL}
            - LETSENCRYPT_TEST=${DCP_ENV_LETSENCRYPT_TEST}
        links:
            - piwik-database:db
        env_file: prod.env

    piwik-database:
        image: mysql:5
        container_name: piwik-database
        volumes:
            - piwik-database-volume:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=${DCP_ENV_PIWIK_MYSQL_PASSWD}
        env_file: prod.env

    selfoss:
        image: jenserat/selfoss
        container_name: selfoss
        volumes:
            - /srv/selfoss:/var/www/html/data
        environment:
            - VIRTUAL_HOST=rss.${DCP_ENV_DOMAIN}
            - HTTPS_METHOD=${DCP_ENV_HTTPS_METHOD}
            - LETSENCRYPT_HOST=rss.${DCP_ENV_DOMAIN}
            - LETSENCRYPT_EMAIL=${DCP_ENV_LETSENCRYPT_EMAIL}
            - LETSENCRYPT_TEST=${DCP_ENV_LETSENCRYPT_TEST}
        env_file: prod.env

    backup:
        build: ./backup
        ports:
            - "10022:22"
        container_name: backup
        volumes:
            - ./backup/backup.sh:/etc/periodic/daily/backup:ro
            - gogs-volume:/srv/backup/gogs/:ro
            - keeweb-webdav-volume:/srv/backup/keeweb-webdav/:ro
            - piwik-database-volume:/srv/backup/piwik-database/:ro
        environment:
            - DCK_LOCAL_BACKUP_REPO=/srv/backup
            - DCK_REMOTE_BACKUP_REPO=${DCP_ENV_REMOTE_BACKUP_REPO}

volumes:
    gogs-volume:
    keeweb-webdav-volume:
    maildata:
    mailstate:
    piwik-database-volume:
